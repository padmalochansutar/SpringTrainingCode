package com.csmtech.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties.Registration.Signing;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestParam;

import com.csmtech.model.Register;
import com.csmtech.model.SignUp;
import com.csmtech.repository.RegisterRepository;
import com.csmtech.repository.SignUpRepository;




@Controller
public class UserController {
	  @Autowired
	private SignUpRepository signUpRepository;
	  @Autowired
	  private RegisterRepository registerRepository;
	
	@GetMapping("/signup")
	public String  signUp() {
		System.out.println("hello");
		return "register";
		
	}
	@GetMapping("/signin")
	public String Signin() {
		return "signin";
	}
	@GetMapping("/dataSave")
	public String dataSave(@ModelAttribute SignUp signUp) throws Exception {
		
		Long mobile=signUp.getMobileNo();
		String tempEmail=signUp.getEmailId();
		  if(mobile!=null && tempEmail!=null ) {
				SignUp objList=signUpRepository.findByMobileNo(mobile);
				try {
				Long mobileId=objList.getMobileNo();
				
				System.out.println("the mobile isd is"+mobileId);
				if(mobileId!=null) {
					throw new Exception("user with " + mobileId + " is already exist");
				}
				}catch (Exception e) {
					System.err.println("this is handel");
				}
				SignUp emailList=signUpRepository.findByEmailId(tempEmail);
				 String email=emailList.getEmailId();
				 System.out.println("the emauilid is"+email);
				 if(email!=null) {
					 throw new Exception("user with" +email  + "is already exist");
				 }
				
			}
		
		  
		  signUpRepository.save(signUp);
		
		return "register";
		
	}
	@GetMapping("/login")
	public String login(@ModelAttribute SignUp signUp,Model model) {
		String mail=signUp.getEmailId();
		String passw=signUp.getPassword();
		
		SignUp listSignUp= signUpRepository.findByEmailIdAndPassword(mail,passw);
		try {
		String gmail=listSignUp.getEmailId();
		String pwd=listSignUp.getPassword();
		if(mail.equals(gmail)) {
			return "UserRegister";	
			}
		
		}catch (Exception e) {
			model.addAttribute("fail","please Give your valid email and password");
		}
		return "signin";
		
	}
	public  void 

}
